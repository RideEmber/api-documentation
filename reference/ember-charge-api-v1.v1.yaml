openapi: 3.0.0
info:
  title: ember-charge-api-v1
  version: '1.0'
servers:
  - url: 'http://localhost:3000/charge'
paths:
  /v1/health_check:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit_sha:
                    type: string
      operationId: get-health_check
      description: 'Retrieve the git commit hash of the version of code currently running in production. Can be used to check a new version has been deployed, and whether the service is up. '
    parameters: []
  /v1/reservations:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-reservations
      description: Get charge point reservations
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: start_gt
          description: ISO 8601 UTC datetime. Reservations which begin after this time
        - schema:
            type: string
          in: query
          name: idtag
          description: Either the MAC address or the id tag (TBD)
        - schema:
            type: string
            format: date-time
          in: query
          name: start_lt
          description: ISO 8601 UTC datetime. Reservations which begin before this time
        - schema:
            type: string
            format: date-time
          in: query
          name: end_gt
          description: ISO 8601 UTC datetime. Reservations which end after this time
        - schema:
            type: string
            format: date-time
          in: query
          name: end_lt
          description: ISO 8601 UTC datetime. Reservations which end before this time
        - schema:
            type: array
            example: '[1, 204, 56]'
          in: query
          name: connector_ids
          description: Reservations which were made for any of the supplied connector ids
        - schema:
            type: boolean
          in: query
          name: is_cancelled
          description: Was the given reservation cancelled?
        - schema:
            type: array
          in: query
          name: fleet_ids
          description: Reservations which were made for any of the supplied fleet ids.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
    parameters: []
    post:
      summary: Create Reservation
      operationId: post-v1-reservations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the created reservation
        '409':
          description: |-
            Conflict - This response will be returned when the reservation can not be made because it would conflict with an existing reservation.

            TODO: Define proper response body
        '500':
          description: Internal Server Error
      description: Create a reservation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: string
                end:
                  type: string
                vehicle_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                fleet_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                charge_point_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                connector_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
            examples: {}
        description: Parameters of the new Reservation
  '/v1/reservations/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: The unique identifier of the reservation
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-reservations-id-vehicles
      description: Get a Reservation
    delete:
      summary: Cancel Reservation
      operationId: delete-v1-reservations-id
      responses:
        '204':
          description: No Content - Reservation was successfully cancelled
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found - If a reservation with this ID does not exist
        '500':
          description: Internal Server Error
      description: Cancels an existing reservation
    put:
      summary: Update Reservation
      operationId: put-v1-reservations-id
      responses:
        '204':
          description: No Content - The reservation was updated successfully
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '409':
          description: |-
            Conflict - This response will be returned when the reservation can not be made because it would conflict with an existing reservation.

            TODO: Define proper response body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: string
                  format: date-time
                  description: Start of the reservation. UTC ISO 8601
                end:
                  type: string
                  format: date-time
                  description: The end of the reservation. UTC ISO 8601
                vehicle_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                fleet_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                connector_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                charge_point_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
          application/xml:
            schema:
              type: object
              properties: {}
      description: |-
        Update a reservation

        N.B. 409 response if the reservation has a conflict
  /v1/vehicles:
    get:
      summary: List Vehicles
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-v1-vehicles
      description: List Vehicles
      parameters:
        - schema:
            type: array
          in: query
          name: fleet_ids
          description: Vehicles belonging to ANY of these fleets
        - schema:
            type: string
          in: query
          name: mac_address
          description: The vehicle matching this MAC address
        - schema:
            type: string
          in: query
          name: license_plate
          description: The Vehicle matching this license plate number
        - schema:
            type: string
          in: query
          name: country_code
          description: Vehicles with this country code
        - schema:
            type: string
          in: query
          name: height_lt
          description: Vehicles shorter than this (in metres)
        - schema:
            type: string
          in: query
          name: width_lt
          description: Vehicles thinner than this (in meters)
        - schema:
            type: string
          in: query
          name: length_lt
          description: Vehicles shorter than this (in metres)
    post:
      summary: Create a Vehicle
      operationId: post-v1-vehicles
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the newly created vehicle
      description: Create a new vehicle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mac_address:
                  type: string
                fleet_id:
                  type: integer
                  description: The fleet this vehicle should belong to
                license_plate:
                  type: string
                country_code:
                  type: string
                length:
                  type: number
                width:
                  type: number
                height:
                  type: number
              required:
                - mac_address
                - fleet_id
  '/v1/vehicles/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: The vehicle identifier
    get:
      summary: Get Vehicle
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-vehicles-id
      description: Retrieve a Vehicle
    put:
      summary: Modify a Vehicle
      operationId: put-v1-vehicles-id
      responses:
        '204':
          description: No Content - Vehicle updated successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Modify a Vehicle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                country_code:
                  type: string
                length:
                  type: number
                width:
                  type: number
                height:
                  type: number
                mac_address:
                  type: string
                fleet_id:
                  type: integer
                default_charging_policy:
                  type: integer
    delete:
      summary: Delete a Vehicle
      operationId: delete-v1-vehicles-id
      responses:
        '204':
          description: No Content - The vehicle was deleted successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete a Vehicle
  '/v1/vehicles/{id}/reservations':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The vehicle identifier
    get:
      summary: Get Vehicle Reservations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-vehicles-id-reservations
      description: |-
        Get reservations for this vehicle.

        The response will include all reservations which specifically mention this vehicle, and reservations which mention fleets to which this vehicle belongs.
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: start_gt
          description: Reservations starting after this (UTC ISO8601) time
        - schema:
            type: string
            format: date-time
          in: query
          description: Reservations starting before this (UTC ISO8601) time
          name: start_lt
        - schema:
            type: string
            format: date-time
          in: query
          name: end_gt
          description: Reservations ending after this (UTC ISO8601) time
        - schema:
            type: string
            format: date-time
          in: query
          name: end_lt
          description: Reservations ending after this (UTC ISO8601) time
  /v1/fleets:
    get:
      summary: List Fleets
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fleet'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-v1-fleets
      description: List fleets
      parameters:
        - schema:
            type: string
          in: query
          name: name_icontains
          description: Name contains this string (case insensitive)
    post:
      summary: Create a Fleet
      operationId: post-v1-fleets
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict - e.g. if a fleet with this name already exists
        '500':
          description: Internal Server Error
      description: Create a new Fleet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name to identify the fleet
                primary_contact_id:
                  type: string
                phone_number:
                  type: string
                  description: ITU E.164 format phone number
  '/v1/fleets/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: The fleet identifier
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-fleets-id
      description: 'Get a Fleet '
    put:
      summary: Modify a Fleet
      operationId: put-v1-fleets-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Modify an existing Fleet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                primary_contact_id:
                  type: integer
                phone_number:
                  type: string
    delete:
      summary: ''
      operationId: delete-v1-fleets-id
      responses:
        '204':
          description: No Content - Successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete an existing fleet
  '/v1/fleets/{id}/vehicles':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The fleet identifier
    get:
      summary: List all Vehicles in Fleet
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-fleets-id-vehicles
      description: List all Vehicles in Fleet
components:
  schemas:
    Account:
      title: Account
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Reservation:
      title: Reservation
      type: object
      x-examples:
        All vehicles in Fleets 1 and 2 can charge at Connector 1:
          reservation_id: 234
          start: '2019-08-24T14:15:22Z'
          end: '2019-08-24T15:15:22Z'
          initiator_id: 1
          cancelled_at: null
          fleet_ids:
            - 1
            - 2
          vehicle_ids: null
          charge_point_ids: null
          connector_ids:
            - 1
      description: |-
        A Reservation determines a limited time period where limited set of vehicles can charge at a limited set of chargers.

        All datetimes are in UTC and of ISO8601 format

        Either fleet_ids or vehicle_ids must be supplied

        Either charge_point_ids or connector_ids must be supplied
      properties:
        start:
          type: string
          format: date-time
          description: The UTC time at which the reservation begins (ISO8601)
        end:
          type: string
          format: date-time
          description: The UTC time at which the reservation ends (ISO8601)
        initiator_id:
          type: integer
          description: The identifier of the person who created the reservation
        cancelled_at:
          type:
            - string
            - 'null'
          format: date-time
          description: 'If the reservation was cancelled, the UTC time at which it was cancelled (ISO8601). Otherwise, null'
        fleet_ids:
          type:
            - 'null'
            - array
          description: The reservation will allow ALL vehicles in the fleets identified by the supplied ids
          items:
            type: integer
        vehicle_ids:
          type:
            - array
            - 'null'
          description: The reservation will ONLY allow the vehicles identified by the supplied ids
          items:
            type: integer
        charge_point_ids:
          type:
            - array
            - 'null'
          description: 'The reservation will ONLY allow charging at the specified charge point IDs, at ANY of the connectors on these charge points'
          items:
            type: integer
        connector_ids:
          type:
            - array
            - 'null'
          description: The reservation will ONLY allow charging at the specified connectors
          items:
            type: integer
        id:
          type: integer
          description: The unique identifier of the reseration
    Fleet:
      title: Fleet
      type: object
      description: |-
        A logical set of Vehicles.

        Note: A single organisation can choose to have multiple fleets. For example, to sub-divide their vehicles into HGVs and Buses.
      properties:
        id:
          type: string
          description: The unique identifier of the fleet
        name:
          type: string
          description: Name to easily identify the fleet
        primary_contact:
          $ref: '#/components/schemas/Person'
        phone_number:
          type:
            - string
            - 'null'
          description: Optional phone number in addition to primary contact (e.g. for a head office). ITU E.164 format
    Vehicle:
      title: Vehicle
      type: object
      description: ''
      properties:
        id:
          type: string
          description: The unique identifier of the vehicle
        fleet_id:
          $ref: '#/components/schemas/Fleet'
        mac_address:
          type: string
          description: 'The MAC address of the vehicle (TODO: specify format)'
        license_plate:
          type: string
          description: The license plate number of the vehicle
        country_code:
          type: string
          description: The country the license plate is registered to (ISO 3166-1 alpha-2)
        default_charging_policy:
          $ref: '#/components/schemas/ChargingPolicy'
        length:
          type:
            - 'null'
            - number
          description: 'The Vehicle''s length, in metres'
        width:
          type:
            - 'null'
            - number
          description: |
            The Vehicle's width, in metres
        height:
          type:
            - 'null'
            - number
          description: 'The Vehicle''s height, in metres'
    ChargingPolicy:
      title: ChargingPolicy
      type: object
      properties:
        id:
          type: string
    Person:
      title: Person
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        surname:
          type: string
        phone_number:
          type:
            - string
            - 'null'
          description: ITU E.164 format (e.g. +44 1234567891)
        email:
          type: string
      description: ''
    ChargePoint:
      title: ChargePoint
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the charge point
        Name:
          type: string
          description: Name to easily identify the charge point
        Site:
          $ref: '#/components/schemas/Site'
        what3words:
          type: string
          description: 'Location of the site, in what3words'
      description: A charge point may have multiple connectors (hoses) attached
    Connector:
      title: Connector
      type: object
      description: 'An individual connector, which is attached to a Charge Point and can be plugged into a Vehicle for charging.'
      properties:
        id:
          type: string
        charge_point:
          $ref: '#/components/schemas/ChargePoint'
        parking_bay:
          $ref: '#/components/schemas/ParkingBay'
        connector_standard:
          type: string
          enum:
            - CCS
            - CHAdeMO
            - Type 2
            - Type 1
          description: 'Type of connector '
          example: CCS
        max_power:
          type: number
          description: 'The maximum power the connector can supply, in Watts'
          example: 150
    ParkingBay:
      title: ParkingBay
      type: object
      description: |-
        A parking spot, usually used to identify where a vehicle will stand while charging. 

        Note that the maximum dimensions may not refer to the spot itself, but rather the access to the spot. For example, there may be no height restriction at the spot itself but the access road may be inaccessible for vehicles over [3.5]m high - therefore the parking spot has a max_height of 3.5m
      properties:
        id:
          type: string
        max_length:
          type: number
          description: Maximum vehicle length (metres) that can park here
        max_height:
          description: Maximum vehicle height (metres) that can park here
          type: number
        max_width:
          description: Maximum vehicle width (metres) that can park here
          type: number
    Site:
      title: Site
      type: object
      description: 'A location which may have multiple Charge Points located at it. (e.g. Greenmarket, Dundee)'
      properties:
        id:
          type: string
        name:
          type: string
          description: A name to easily identify the site
        what3words:
          type: string
          description: Location of the site. Preferably the entrance of the site.
