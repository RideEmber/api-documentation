openapi: 3.0.0
info:
  title: ember-charge-api-v1
  version: '1.0'
servers:
  - url: 'http://localhost:3000/charge'
paths:
  /v1/user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    parameters: []
  /v1/health_check:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit_sha:
                    type: string
      operationId: get-health_check
      description: 'Retrieve the git commit hash of the version of code currently running in production. Can be used to check a new version has been deployed, and whether the service is up. '
    parameters: []
  /v1/reservations:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-reservations
      description: Get charge point reservations
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: start_gt
          description: ISO 8601 UTC datetime. Reservations which begin after this time
        - schema:
            type: string
          in: query
          name: idtag
          description: Either the MAC address or the id tag (TBD)
        - schema:
            type: string
            format: date-time
          in: query
          name: start_lt
          description: ISO 8601 UTC datetime. Reservations which begin before this time
        - schema:
            type: string
            format: date-time
          in: query
          name: end_gt
          description: ISO 8601 UTC datetime. Reservations which end after this time
        - schema:
            type: string
            format: date-time
          in: query
          name: end_lt
          description: ISO 8601 UTC datetime. Reservations which end before this time
        - schema:
            type: array
            example: '1, 204, 56'
          in: query
          name: connector_ids
          description: Reservations which were made for any of the supplied connector ids
        - schema:
            type: boolean
          in: query
          name: is_cancelled
          description: Was the given reservation cancelled?
        - schema:
            type: array
          in: query
          name: fleet_ids
          description: Reservations which were made for any of the supplied fleet ids.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
    parameters: []
    post:
      summary: Create Reservation
      operationId: post-v1-reservations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the created reservation
      description: Create a reservation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: string
                end:
                  type: string
                vehicle_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                fleet_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                charge_point_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
                connector_ids:
                  type:
                    - array
                    - 'null'
                  items:
                    type: integer
            examples: {}
        description: ''
  '/v1/reservations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-v1-reservations-id-vehicles
      description: Get a Reservation
    delete:
      summary: Cancel Reservation
      operationId: delete-v1-reservations-id
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found - If a reservation with this ID does not exist
        '500':
          description: Internal Server Error
      description: Cancels an existing reservation
components:
  schemas:
    Account:
      title: Account
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Reservation:
      title: Reservation
      type: object
      x-examples:
        All vehicles in Fleets 1 and 2 can charge at Connector 1:
          reservation_id: 234
          start: '2019-08-24T14:15:22Z'
          end: '2019-08-24T15:15:22Z'
          initiator_id: 1
          cancelled_at: null
          fleet_ids:
            - 1
            - 2
          vehicle_ids: null
          charge_point_ids: null
          connector_ids:
            - 1
      description: |-
        A Reservation determines a limited time period where limited set of vehicles can charge at a limited set of chargers.

        All datetimes are in UTC and of ISO8601 format

        Either fleet_ids or vehicle_ids must be supplied

        Either charge_point_ids or connector_ids must be supplied
      properties:
        start:
          type: string
          format: date-time
          description: The UTC time at which the reservation begins (ISO8601)
        end:
          type: string
          format: date-time
          description: The UTC time at which the reservation ends (ISO8601)
        initiator_id:
          type: integer
          description: The identifier of the person who created the reservation
        cancelled_at:
          type:
            - string
            - 'null'
          format: date-time
          description: 'If the reservation was cancelled, the UTC time at which it was cancelled (ISO8601). Otherwise, null'
        fleet_ids:
          type:
            - 'null'
            - array
          description: The reservation will allow ALL vehicles in the fleets identified by the supplied ids
          items:
            type: integer
        vehicle_ids:
          type:
            - array
            - 'null'
          description: The reservation will ONLY allow the vehicles identified by the supplied ids
          items:
            type: integer
        charge_point_ids:
          type:
            - array
            - 'null'
          description: 'The reservation will ONLY allow charging at the specified charge point IDs, at ANY of the connectors on these charge points'
          items:
            type: integer
        connector_ids:
          type:
            - array
            - 'null'
          description: The reservation will ONLY allow charging at the specified connectors
          items:
            type: integer
        id:
          type: integer
          description: The unique identifier of the reseration
    Fleet:
      title: Fleet
      type: object
      description: |-
        A logical set of Vehicles.

        Note: A single organisation can choose to have multiple fleets. For example, to sub-divide their vehicles into HGVs and Buses.
      properties:
        id:
          type: string
          description: The unique identifier of the fleet
        name:
          type: string
          description: Name to easily identify the fleet
        primary_contact:
          $ref: '#/components/schemas/Person'
        phone_number:
          type:
            - string
            - 'null'
          description: Optional phone number in addition to primary contact (e.g. for a head office). ITU E.164 format
    Vehicle:
      title: Vehicle
      type: object
      description: ''
      properties:
        id:
          type: string
          description: The unique identifier of the vehicle
        fleet_id:
          $ref: '#/components/schemas/Fleet'
        mac_address:
          type: string
          description: 'The MAC address of the vehicle (TODO: specify format)'
        license_plate:
          type: string
          description: The license plate number of the vehicle
        country_code:
          type: string
          description: The country the license plate is registered to (ISO 3166-1 alpha-2)
        default_charging_policy:
          $ref: '#/components/schemas/ChargingPolicy'
        length:
          type:
            - 'null'
            - number
          description: 'The Vehicle''s length, in metres'
        width:
          type:
            - 'null'
            - number
          description: |
            The Vehicle's width, in metres
        height:
          type:
            - 'null'
            - number
          description: 'The Vehicle''s height, in metres'
    ChargingPolicy:
      title: ChargingPolicy
      type: object
      properties:
        id:
          type: string
    Person:
      title: Person
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        surname:
          type: string
        phone_number:
          type:
            - string
            - 'null'
          description: ITU E.164 format (e.g. +44 1234567891)
        email:
          type: string
      description: ''
    ChargePoint:
      title: ChargePoint
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the charge point
        Name:
          type: string
          description: Name to easily identify the charge point
        Site:
          $ref: '#/components/schemas/Site'
        what3words:
          type: string
          description: 'Location of the site, in what3words'
      description: A charge point may have multiple connectors (hoses) attached
    Connector:
      title: Connector
      type: object
      properties:
        id:
          type: string
        charge_point:
          $ref: '#/components/schemas/Charge-Point'
        parking_bay:
          $ref: '#/components/schemas/ParkingBay'
        connector_standard:
          type: string
          enum:
            - CCS
            - CHAdeMO
            - Type 2
            - Type 1
          description: 'Type of connector '
          example: CCS
        max_power:
          type: number
          description: 'The maximum power the connector can supply, in Watts'
          example: 150
      description: 'An individual connector, which is attached to a Charge Point and can be plugged into a Vehicle for charging.'
    ParkingBay:
      title: ParkingBay
      type: object
      description: |-
        A parking spot, usually used to identify where a vehicle will stand while charging. 

        Note that the maximum dimensions may not refer to the spot itself, but rather the access to the spot. For example, there may be no height restriction at the spot itself but the access road may be inaccessible for vehicles over [3.5]m high - therefore the parking spot has a max_height of 3.5m
      properties:
        id:
          type: string
        max_length:
          type: number
          description: Maximum vehicle length (metres) that can park here
        max_height:
          description: Maximum vehicle height (metres) that can park here
          type: number
        max_width:
          description: Maximum vehicle width (metres) that can park here
          type: number
    Site:
      title: Site
      type: object
      description: 'A location which may have multiple Charge Points located at it. (e.g. Greenmarket, Dundee)'
      properties:
        id:
          type: string
        name:
          type: string
          description: A name to easily identify the site
        what3words:
          type: string
          description: Location of the site. Preferably the entrance of the site.
