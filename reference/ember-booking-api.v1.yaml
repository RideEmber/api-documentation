openapi: 3.0.0
info:
  title: Booking API
  version: '1.0'
  description: Ember Booking endpoints
servers:
  - url: 'https://api.ember.to'
    description: Prod
  - url: 'http://localhost:8000'
    description: Dev
  - url: 'http://localhost:3100'
    description: Mock
tags:
  - name: Browse Journeys
    description: Endpoints that are globally accessible with no authentication
  - name: Internal Endpoints
paths:
  /stops:
    get:
      summary: Find Stops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/stop.v1.yaml
              examples:
                Stops List:
                  value:
                    - id: 3
                      name: Dundee
                      stop_type: 1
                    - id: 4
                      name: Dundee (Greenmarket)
                      stop_type: 2
                    - id: 5
                      name: Dundee West (Apollo Way)
                      stop_type: 2
                    - id: 6
                      name: Inchture
                      stop_type: 1
                    - id: 7
                      name: Inchture (Westbound)
                      stop_type: 2
                    - id: 8
                      name: Inchture (Eastbound)
                      stop_type: 2
                    - id: 9
                      name: Edinburgh
                      stop_type: 1
                    - id: 10
                      name: Edinburgh (Blackhall Library)
                      stop_type: 2
                    - id: 11
                      name: Edinburgh (Melville Street)
                      stop_type: 2
                    - id: 12
                      name: Ferrytoll (Park and Ride)
                      stop_type: 2
                    - id: 13
                      name: Kinross (Park and Ride)
                      stop_type: 2
                    - id: 2
                      name: Perth (Central Car Park)
                      stop_type: 2
      operationId: get-stops
      description: 'Get a list of possible stops to book a journey. the result is a list of `Stop` objects, which includes groups of stops, such as cities.'
      parameters:
        - schema:
            $ref: '#/components/schemas/format'
          in: query
          name: format
          example: json
      tags:
        - Browse Journeys
    parameters: []
  /journeys:
    get:
      summary: Find Journeys
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journey'
              examples:
                Dundee to Edinburgh:
                  value:
                    - id: 1
                      origin:
                        departure: '2019-12-01T06:30:00Z'
                        stop_id: 1
                        stop_name: Dundee (Greenmarket)
                      destination:
                        arrival: '2019-12-01T08:15:00Z'
                        stop_id: 5
                        stop_name: Edinburgh (Melville Street)
                    - id: 1
                      origin:
                        departure: '2019-12-01T06:30:00Z'
                        stop_id: 1
                        stop_name: Dundee (Greenmarket)
                      destination:
                        arrival: '2019-12-01T07:59:00Z'
                        stop_id: 4
                        stop_name: Edinburgh (Blackhall Library)
      operationId: get-journeys
      description: This endpoint is used for finding journeys that satisfy a set of conditions along with their fare.
      parameters:
        - schema:
            type: integer
          example: 3
          in: query
          name: origin
          description: The id of the stop at the begining of the trip
          required: true
        - schema:
            type: integer
          example: 10
          in: query
          name: destination
          description: The id of the stop at the end of the trip
          required: true
        - schema:
            type: string
            format: date-time
          in: query
          name: departure-time-from
        - schema:
            type: string
            format: date-time
          example: '2019-12-01T17:30:00'
          in: query
          name: departure-time-to
        - schema:
            type: string
            format: date-time
          in: query
          name: arrival-time-from
        - schema:
            type: string
            format: date-time
          in: query
          name: arrival-time-to
        - schema:
            type: integer
            minimum: 1
          in: query
          name: passengers
          description: the amount of seats requested
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/DiscountCards'
          in: query
          name: discounts
          description: 'a list of all applied discount cards, see DiscountCards under Models for reference'
        - schema:
            $ref: '#/components/schemas/format'
          in: query
          name: format
          example: json
      tags:
        - Browse Journeys
    parameters: []
  /legs:
    get:
      summary: Find Legs
      tags:
        - Internal Endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leg'
      operationId: get-Legs
      parameters:
        - schema:
            type: integer
          in: query
          name: origin
          description: The id of the stop at the begining of the trip
          required: true
        - schema:
            type: integer
          in: query
          name: destination
          description: The id of the stop at the end of the trip
          required: true
        - schema:
            type: string
            format: date-time
          in: query
          name: departure-time-from
        - schema:
            type: string
            format: date-time
          in: query
          name: departure-time-to
        - schema:
            type: string
            format: date-time
          in: query
          name: arrival-time-from
        - schema:
            type: string
            format: date-time
          in: query
          name: arrival-time-to
      description: This endpoint is used for finding journeys that satisfy a set of conditions. It is used internally with `/prices` to create the `/journeys` endpoint.
    parameters: []
  /prices:
    get:
      summary: Get prices
      tags:
        - Internal Endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  journeys:
                    type: array
                    items:
                      $ref: '#/components/schemas/Journey'
                  passengers:
                    type: integer
                    minimum: 1
                  discount_cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscountCards'
                required:
                  - journeys
                  - passengers
                  - discount_cards
      operationId: get-prices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                journeys:
                  type: array
                  items:
                    $ref: '#/components/schemas/Journey'
                passengers:
                  type: integer
                  minimum: 1
                discount_cards:
                  type: array
                  items:
                    $ref: '#/components/schemas/DiscountCards'
              required:
                - journeys
                - passengers
                - discount_cards
        description: 'The journey object in the response contains the `price` property, unlike the request.'
      description: This endpoint is used for finding prices for a set of journeys. It is used internally with `/legs` to create the `/journeys` endpoint.
components:
  schemas:
    Leg:
      title: Leg
      type: object
      description: The result object a client recives when searching for trips.
      x-examples:
        Dundee to Edinburgh:
          id: 1367
          origin:
            departure: '2020-05-19T23:00:00Z'
            stop_id: 1
            stop_name: Dundee (Greenmarket)
          destination:
            arrival: '2020-05-20T00:45:00Z'
            stop_id: 5
            stop_name: Edinburgh (Melville Street)
      properties:
        trip_id:
          type: integer
        origin:
          $ref: '#/components/schemas/JourneyStop'
        destination:
          $ref: '#/components/schemas/JourneyStop'
      required:
        - trip_id
        - origin
        - destination
      x-tags:
        - Models
    JourneyStop:
      title: JourneyStop
      type: object
      description: ''
      x-examples:
        Dundee (Greenmarket):
          departure: '2020-05-19T23:00:00Z'
          stop_id: 1
          stop_name: Dundee (Greenmarket)
        Edinburgh (Melville Street):
          arrival: '2020-05-20T00:45:00Z'
          stop_id: 5
          stop_name: Edinburgh (Melville Street)
      properties:
        stop_id:
          type: integer
        stop_name:
          type: string
        departure:
          type: string
          format: date-time
        arrival:
          type: string
          format: date-time
        stop_description:
          type: string
      required:
        - stop_id
        - stop_name
      x-tags:
        - Models
    Journey:
      title: Journey
      type: object
      x-tags:
        - Models
      properties:
        legs:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Leg'
        price:
          type: number
          minimum: 0
      required:
        - legs
    DiscountCards:
      type: string
      title: DiscountCards
      enum:
        - SCOT_CONCESSION
        - SCOT_UNDER_18
      x-tags:
        - Models
      description: Defines the accepted discount cards
    format:
      type: string
      title: format
      default: json
      enum:
        - json
        - api
      description: The format of the response can be `api` or `json`
